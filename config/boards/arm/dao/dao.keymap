/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };
&mt { quick_tap_ms = <200>; };

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  GUI |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
//        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
//        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
//                           | RSE | SPC | LWR |   | LWR | BKSP | RSE |
                        bindings = <
   &kp GRAVE &kp ESC        &kp Q &kp W &kp E &kp R &kp T          &kp Y    &kp U      &kp I        &kp O      &kp P       &kp BACKSLASH       &kp BACKSLASH
             &mt LCTRL TAB  &kp A &kp S &kp D &kp F &kp G          &kp H    &kp J      &kp K        &kp L      &kp SEMI    &mt RCTRL SQT
             &kp LSHFT      &kp Z &kp X &kp C &kp V &kp B          &kp N    &kp M      &kp COMMA    &kp DOT    &kp FSLH    &mt RALT BSLH
                            &kp LGUI &mo 1 &lt RSE RET &kp SPACE &kp BSPC &kp CAPSLOCK
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |     |  _  |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |
//       |  +  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  -  |
//       |  =  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans    &kp ESC    &kp N1       &kp N2          &kp N3             &kp N4               &kp N5            &kp N6                   &kp N7                     &kp N8                 &kp N9                   &kp N0     &kp GRAVE      &trans
             &trans     &kp EXCL     &kp AT          &kp HASH           &kp DLLR             &kp PRCNT         &kp CARET                &kp AMPS                   &kp KP_MULTIPLY        &kp LPAR                 &kp RPAR   &kp COLON
             &kp LSHFT  &trans       &kp KP_PLUS     &kp KP_MINUS       &kp LEFT_BRACE       &kp LEFT_BRACKET  &kp RIGHT_BRACKET        &kp RIGHT_BRACE            &kp KP_EQUAL           &kp UNDERSCORE           &trans     &trans
                                             &kp LGUI           &trans               &mo ADJ        &kp KP_N1                &kp KP_N2                  &kp KP_N3
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |     | NMLK |  /  |  7  |  8  |  9  |  -  |   | VOLU| HOME| PRSC| PGUP| SCLK| CLCK|     |
//       | CTRL |  *  |  4  |  5  |  6  |  +  |   | MUT | LEFT|  UP | RGHT| INS | APP |
//       |      |  0  |  1  |  2  |  3  |  .  |   | VOLD| END | DOWN| PGDN| PAUS|     |
//                          |     |     | ADJ |   | ADJ |     |     |
                        bindings = <
   &trans       &kp LG(LS(N4))        &kp KP_SLASH       &kp KP_N7          &kp KP_N8         &kp KP_N9           &kp KP_MINUS            &kp C_VOL_UP         &kp HOME                &kp PSCRN          &kp PG_UP          &kp SLCK     &kp LG(LS(N4)) &trans
                &trans                &trans             &kp LEFT_ARROW     &kp DOWN_ARROW    &kp RIGHT_ARROW     &kp END                 &kp MINUS            &kp LEFT_ARROW          &kp DOWN_ARROW     &kp RIGHT_ARROW    &kp END      &trans
                &out OUT_TOG          &trans             &trans             &trans            &kp LC(LEFT_ARROW)  &kp LC(RIGHT_ARROW)     &kp LC(LEFT_ARROW)   &kp LC(RIGHT_ARROW)     &trans             &trans             &trans       &out OUT_TOG
                              &kp LGUI           &mo ADJ        &trans              &trans   &trans   &trans
                        >;
                };
                adjust_layer {
// -----------------------------------------------------------------------------------------
// | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
//       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
//       |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                          |     |     |     |   |     |     |     |
                        bindings = <
   &reset &reset       &bootloader        &none        &none        &none        &none              &none        &none        &none        &none        &bootloader          &reset         &reset
          &bt BT_CLR   &bt BT_SEL 0       &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4       &bt BT_SEL 4 &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0         &bt BT_CLR
          &kp F1       &kp F2             &kp F3       &kp F4       &kp F5       &kp F6             &kp F7       &kp F8       &kp F9       &kp F10      &kp F11              &kp F12
                                                                    &trans &none &trans   &trans &none &trans
                        >;
                };
        };
};
